# Generated by Django 5.1.4 on 2025-01-29 09:45

import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AttribType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('is_deleted', models.SmallIntegerField(default=False)),
            ],
            options={
                'db_table': 'attrib_type',
            },
        ),
        migrations.CreateModel(
            name='LGDVariantType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('inherited', models.BooleanField(default=False)),
                ('de_novo', models.BooleanField(default=False)),
                ('unknown_inheritance', models.BooleanField(default=False)),
                ('is_deleted', models.SmallIntegerField(default=False)),
            ],
            options={
                'db_table': 'lgd_variant_type',
            },
        ),
        migrations.CreateModel(
            name='Organ',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'organ',
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(max_length=255, null=True)),
                ('version', models.CharField(max_length=50, null=True)),
                ('url', models.CharField(max_length=255, null=True)),
            ],
            options={
                'db_table': 'source',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=100, unique=True)),
                ('email', models.CharField(max_length=100, unique=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('date_joined', models.DateField(null=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('first_name', models.CharField(default=None, max_length=100, null=True)),
                ('last_name', models.CharField(default=None, max_length=100, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='Attrib',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('value', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_deleted', models.SmallIntegerField(default=False)),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.attribtype')),
            ],
            options={
                'db_table': 'attrib',
            },
        ),
        migrations.CreateModel(
            name='CVMolecularMechanism',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('mechanism', 'Molecular mechanism'), ('mechanism_synopsis', 'Mechanism synopsis'), ('support', 'Mechanism support'), ('evidence', 'Mechanism evidence')], max_length=50)),
                ('subtype', models.CharField(choices=[('function', 'Function'), ('rescue', 'Rescue'), ('functional_alteration', 'Functional alteration'), ('models', 'Models')], max_length=100, null=True)),
                ('value', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cv_molecular_mechanism',
                'unique_together': {('type', 'subtype', 'value')},
            },
        ),
        migrations.CreateModel(
            name='Disease',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'db_table': 'disease',
                'indexes': [models.Index(fields=['name'], name='disease_name_940f9a_idx')],
            },
        ),
        migrations.CreateModel(
            name='DiseasePhenotype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.DecimalField(decimal_places=6, max_digits=10)),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.disease')),
            ],
            options={
                'db_table': 'disease_phenotype',
            },
        ),
        migrations.CreateModel(
            name='DiseasePhenotypeComment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('comment', models.TextField()),
                ('date_created', models.DateField()),
                ('is_public', models.SmallIntegerField(default=True)),
                ('is_deleted', models.SmallIntegerField(default=False)),
                ('disease_phenotype', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.diseasephenotype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'disease_phenotype_comment',
            },
        ),
        migrations.CreateModel(
            name='DiseaseSynonym',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('synonym', models.CharField(max_length=255)),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.disease')),
            ],
            options={
                'db_table': 'disease_synonym',
            },
        ),
        migrations.CreateModel(
            name='G2PStableID',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('stable_id', models.CharField(max_length=100, unique=True)),
                ('is_live', models.BooleanField(default=False)),
                ('is_deleted', models.SmallIntegerField(default=False)),
            ],
            options={
                'db_table': 'g2p_stableid',
                'indexes': [models.Index(fields=['stable_id'], name='g2p_stablei_stable__c7521f_idx')],
            },
        ),
        migrations.CreateModel(
            name='CurationData',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField()),
                ('date_last_update', models.DateTimeField()),
                ('session_name', models.CharField(max_length=100, unique=True)),
                ('json_data', models.JSONField()),
                ('gene_symbol', models.CharField(default=None, max_length=50)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('stable_id', models.ForeignKey(db_column='stable_id', on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.g2pstableid')),
            ],
            options={
                'db_table': 'curation_data',
            },
        ),
        migrations.CreateModel(
            name='GenCCSubmission',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('submission_id', models.CharField(max_length=64)),
                ('old_g2p_id', models.IntegerField(default=False, null=True)),
                ('date_of_submission', models.DateField()),
                ('type_of_submission', models.CharField(default='create', max_length=50)),
                ('g2p_stable_id', models.ForeignKey(db_column='g2p_stable_id', on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.g2pstableid')),
            ],
            options={
                'db_table': 'gencc_submission',
            },
        ),
        migrations.CreateModel(
            name='HistoricalCurationData',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('date_created', models.DateTimeField()),
                ('date_last_update', models.DateTimeField()),
                ('session_name', models.CharField(db_index=True, max_length=100)),
                ('json_data', models.JSONField()),
                ('gene_symbol', models.CharField(default=None, max_length=50)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('stable_id', models.ForeignKey(blank=True, db_column='stable_id', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.g2pstableid')),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical curation data',
                'verbose_name_plural': 'historical curation datas',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDisease',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical disease',
                'verbose_name_plural': 'historical diseases',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDiseaseSynonym',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('synonym', models.CharField(max_length=255)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('disease', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.disease')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical disease synonym',
                'verbose_name_plural': 'historical disease synonyms',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPublication',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('pmid', models.IntegerField(db_index=True)),
                ('title', models.CharField(max_length=500)),
                ('authors', models.CharField(max_length=255, null=True)),
                ('source', models.CharField(max_length=255, null=True)),
                ('doi', models.CharField(max_length=255, null=True)),
                ('year', models.IntegerField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical publication',
                'verbose_name_plural': 'historical publications',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LGDVariantTypeComment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('comment', models.TextField()),
                ('is_public', models.SmallIntegerField(default=True)),
                ('is_deleted', models.SmallIntegerField(default=False)),
                ('date', models.DateTimeField()),
                ('lgd_variant_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='comments', to='gene2phenotype_app.lgdvarianttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lgd_variant_type_comment',
            },
        ),
        migrations.CreateModel(
            name='Locus',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('start', models.IntegerField()),
                ('end', models.IntegerField()),
                ('strand', models.SmallIntegerField(default=1)),
                ('name', models.CharField(max_length=255)),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.attrib')),
            ],
            options={
                'db_table': 'locus',
            },
        ),
        migrations.CreateModel(
            name='HistoricalLocusGenotypeDisease',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('confidence_support', models.TextField(default=None, null=True)),
                ('date_review', models.DateTimeField(null=True)),
                ('is_reviewed', models.SmallIntegerField()),
                ('is_deleted', models.SmallIntegerField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('confidence', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.attrib')),
                ('disease', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.disease')),
                ('genotype', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.attrib')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('mechanism', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.cvmolecularmechanism')),
                ('mechanism_support', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.cvmolecularmechanism')),
                ('stable_id', models.ForeignKey(blank=True, db_column='stable_id', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.g2pstableid')),
                ('locus', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.locus')),
            ],
            options={
                'verbose_name': 'historical locus genotype disease',
                'verbose_name_plural': 'historical locus genotype diseases',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LocusGenotypeDisease',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('confidence_support', models.TextField(default=None, null=True)),
                ('date_review', models.DateTimeField(null=True)),
                ('is_reviewed', models.SmallIntegerField()),
                ('is_deleted', models.SmallIntegerField(default=False)),
                ('confidence', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='confidence', to='gene2phenotype_app.attrib')),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.disease')),
                ('genotype', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='genotype', to='gene2phenotype_app.attrib')),
                ('locus', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.locus')),
                ('mechanism', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='mechanism', to='gene2phenotype_app.cvmolecularmechanism')),
                ('mechanism_support', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='mechanism_support', to='gene2phenotype_app.cvmolecularmechanism')),
                ('stable_id', models.ForeignKey(db_column='stable_id', on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.g2pstableid')),
            ],
            options={
                'db_table': 'locus_genotype_disease',
            },
        ),
        migrations.AddField(
            model_name='lgdvarianttype',
            name='lgd',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.locusgenotypedisease'),
        ),
        migrations.CreateModel(
            name='LGDMutationConsequenceFlag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mutation_consequence_flag', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='mutation_consequence_flag', to='gene2phenotype_app.attrib')),
                ('lgd', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.locusgenotypedisease')),
            ],
            options={
                'db_table': 'lgd_mutation_consequence_flag',
            },
        ),
        migrations.CreateModel(
            name='LGDMolecularMechanismSynopsis',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('is_deleted', models.SmallIntegerField(default=False)),
                ('synopsis', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='synopsis', to='gene2phenotype_app.cvmolecularmechanism')),
                ('synopsis_support', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='synopsis_support', to='gene2phenotype_app.cvmolecularmechanism')),
                ('lgd', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.locusgenotypedisease')),
            ],
            options={
                'db_table': 'lgd_mechanism_synopsis',
            },
        ),
        migrations.CreateModel(
            name='LGDCrossCuttingModifier',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('is_deleted', models.SmallIntegerField(default=False)),
                ('ccm', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.attrib')),
                ('lgd', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.locusgenotypedisease')),
            ],
            options={
                'db_table': 'lgd_cross_cutting_modifier',
            },
        ),
        migrations.CreateModel(
            name='LGDComment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('comment', models.TextField()),
                ('is_public', models.SmallIntegerField(default=True)),
                ('is_deleted', models.SmallIntegerField(default=False)),
                ('date', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('lgd', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.locusgenotypedisease')),
            ],
            options={
                'db_table': 'lgd_comment',
            },
        ),
        migrations.CreateModel(
            name='HistoricalLGDMolecularMechanismSynopsis',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('is_deleted', models.SmallIntegerField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('synopsis', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.cvmolecularmechanism')),
                ('synopsis_support', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.cvmolecularmechanism')),
                ('lgd', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.locusgenotypedisease')),
            ],
            options={
                'verbose_name': 'historical lgd molecular mechanism synopsis',
                'verbose_name_plural': 'historical lgd molecular mechanism synopsiss',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLGDCrossCuttingModifier',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('is_deleted', models.SmallIntegerField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('ccm', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.attrib')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('lgd', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.locusgenotypedisease')),
            ],
            options={
                'verbose_name': 'historical lgd cross cutting modifier',
                'verbose_name_plural': 'historical lgd cross cutting modifiers',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='OntologyTerm',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('accession', models.CharField(max_length=255, unique=True)),
                ('term', models.CharField(max_length=255)),
                ('description', models.TextField(null=True)),
                ('group_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.attrib')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.source')),
            ],
            options={
                'db_table': 'ontology_term',
            },
        ),
        migrations.AddField(
            model_name='lgdvarianttype',
            name='variant_type_ot',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='variant_type', to='gene2phenotype_app.ontologyterm'),
        ),
        migrations.CreateModel(
            name='LGDVariantGenccConsequence',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('is_deleted', models.SmallIntegerField(default=False)),
                ('support', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.attrib')),
                ('lgd', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.locusgenotypedisease')),
                ('variant_consequence', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.ontologyterm')),
            ],
            options={
                'db_table': 'lgd_variant_gencc_consequence',
            },
        ),
        migrations.CreateModel(
            name='HistoricalLGDVariantGenccConsequence',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('is_deleted', models.SmallIntegerField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('support', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.attrib')),
                ('lgd', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.locusgenotypedisease')),
                ('variant_consequence', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.ontologyterm')),
            ],
            options={
                'verbose_name': 'historical lgd variant gencc consequence',
                'verbose_name_plural': 'historical lgd variant gencc consequences',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDiseaseOntologyTerm',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('disease', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.disease')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('mapped_by_attrib', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.attrib')),
                ('ontology_term', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.ontologyterm')),
            ],
            options={
                'verbose_name': 'historical disease ontology term',
                'verbose_name_plural': 'historical disease ontology terms',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddField(
            model_name='diseasephenotype',
            name='phenotype',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.ontologyterm'),
        ),
        migrations.CreateModel(
            name='DiseaseOntologyTerm',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.disease')),
                ('mapped_by_attrib', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.attrib')),
                ('ontology_term', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.ontologyterm')),
            ],
            options={
                'db_table': 'disease_ontology_term',
            },
        ),
        migrations.CreateModel(
            name='LGDOrgan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lgd', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.locusgenotypedisease')),
                ('organ', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.organ')),
            ],
            options={
                'db_table': 'lgd_organ',
            },
        ),
        migrations.CreateModel(
            name='Panel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(max_length=255, null=True)),
                ('is_visible', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'panel',
                'indexes': [models.Index(fields=['name'], name='panel_name_ca1178_idx')],
            },
        ),
        migrations.CreateModel(
            name='LGDPanel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('is_deleted', models.SmallIntegerField(default=False)),
                ('relevance', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.attrib')),
                ('lgd', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.locusgenotypedisease')),
                ('panel', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.panel')),
            ],
            options={
                'db_table': 'lgd_panel',
            },
        ),
        migrations.CreateModel(
            name='HistoricalLGDPanel',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('is_deleted', models.SmallIntegerField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('relevance', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.attrib')),
                ('lgd', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.locusgenotypedisease')),
                ('panel', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.panel')),
            ],
            options={
                'verbose_name': 'historical lgd panel',
                'verbose_name_plural': 'historical lgd panels',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('pmid', models.IntegerField(unique=True)),
                ('title', models.CharField(max_length=500)),
                ('authors', models.CharField(max_length=255, null=True)),
                ('source', models.CharField(max_length=255, null=True)),
                ('doi', models.CharField(max_length=255, null=True)),
                ('year', models.IntegerField(null=True)),
            ],
            options={
                'db_table': 'publication',
                'indexes': [models.Index(fields=['pmid'], name='publication_pmid_247308_idx')],
            },
        ),
        migrations.CreateModel(
            name='PhenotypePublication',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('pheno_count', models.IntegerField(null=True)),
                ('is_deleted', models.SmallIntegerField(default=False)),
                ('phenotype', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.ontologyterm')),
                ('publication', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.publication')),
            ],
            options={
                'db_table': 'phenotype_publication',
            },
        ),
        migrations.CreateModel(
            name='LGDVariantTypeDescription',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=250)),
                ('is_deleted', models.SmallIntegerField(default=False)),
                ('lgd', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.locusgenotypedisease')),
                ('publication', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.publication')),
            ],
            options={
                'db_table': 'lgd_variant_type_description',
            },
        ),
        migrations.AddField(
            model_name='lgdvarianttype',
            name='publication',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.publication'),
        ),
        migrations.CreateModel(
            name='LGDPublication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.SmallIntegerField(default=False)),
                ('lgd', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.locusgenotypedisease')),
                ('publication', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.publication')),
            ],
            options={
                'db_table': 'lgd_publication',
            },
        ),
        migrations.CreateModel(
            name='LGDPhenotypeSummary',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('summary', models.TextField()),
                ('is_deleted', models.SmallIntegerField(default=False)),
                ('lgd', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.locusgenotypedisease')),
                ('publication', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.publication')),
            ],
            options={
                'db_table': 'lgd_phenotype_summary',
            },
        ),
        migrations.CreateModel(
            name='LGDPhenotype',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('is_deleted', models.SmallIntegerField(default=False)),
                ('lgd', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.locusgenotypedisease')),
                ('phenotype', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.ontologyterm')),
                ('publication', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.publication')),
            ],
            options={
                'db_table': 'lgd_phenotype',
            },
        ),
        migrations.CreateModel(
            name='LGDMolecularMechanismEvidence',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.TextField(default=None, null=True)),
                ('is_deleted', models.SmallIntegerField(default=False)),
                ('evidence', models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, related_name='evidence', to='gene2phenotype_app.cvmolecularmechanism')),
                ('lgd', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.locusgenotypedisease')),
                ('publication', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.publication')),
            ],
            options={
                'db_table': 'lgd_mechanism_evidence',
            },
        ),
        migrations.CreateModel(
            name='HistoricalPublicationFamilies',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('families', models.IntegerField()),
                ('affected_individuals', models.IntegerField(null=True)),
                ('ancestries', models.CharField(max_length=500, null=True)),
                ('is_deleted', models.SmallIntegerField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('consanguinity', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.attrib')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('publication', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.publication')),
            ],
            options={
                'verbose_name': 'historical publication families',
                'verbose_name_plural': 'historical publication familiess',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPhenotypePublication',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('pheno_count', models.IntegerField(null=True)),
                ('is_deleted', models.SmallIntegerField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('phenotype', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.ontologyterm')),
                ('publication', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.publication')),
            ],
            options={
                'verbose_name': 'historical phenotype publication',
                'verbose_name_plural': 'historical phenotype publications',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLGDVariantTypeDescription',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('description', models.CharField(max_length=250)),
                ('is_deleted', models.SmallIntegerField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('lgd', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.locusgenotypedisease')),
                ('publication', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.publication')),
            ],
            options={
                'verbose_name': 'historical lgd variant type description',
                'verbose_name_plural': 'historical lgd variant type descriptions',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLGDVariantType',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('inherited', models.BooleanField(default=False)),
                ('de_novo', models.BooleanField(default=False)),
                ('unknown_inheritance', models.BooleanField(default=False)),
                ('is_deleted', models.SmallIntegerField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('lgd', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.locusgenotypedisease')),
                ('variant_type_ot', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.ontologyterm')),
                ('publication', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.publication')),
            ],
            options={
                'verbose_name': 'historical lgd variant type',
                'verbose_name_plural': 'historical lgd variant types',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLGDPublication',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('is_deleted', models.SmallIntegerField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('lgd', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.locusgenotypedisease')),
                ('publication', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.publication')),
            ],
            options={
                'verbose_name': 'historical lgd publication',
                'verbose_name_plural': 'historical lgd publications',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLGDPhenotypeSummary',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('summary', models.TextField()),
                ('is_deleted', models.SmallIntegerField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('lgd', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.locusgenotypedisease')),
                ('publication', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.publication')),
            ],
            options={
                'verbose_name': 'historical lgd phenotype summary',
                'verbose_name_plural': 'historical lgd phenotype summarys',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLGDPhenotype',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('is_deleted', models.SmallIntegerField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('lgd', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.locusgenotypedisease')),
                ('phenotype', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.ontologyterm')),
                ('publication', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.publication')),
            ],
            options={
                'verbose_name': 'historical lgd phenotype',
                'verbose_name_plural': 'historical lgd phenotypes',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLGDMolecularMechanismEvidence',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('description', models.TextField(default=None, null=True)),
                ('is_deleted', models.SmallIntegerField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('evidence', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.cvmolecularmechanism')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('lgd', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.locusgenotypedisease')),
                ('publication', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.publication')),
            ],
            options={
                'verbose_name': 'historical lgd molecular mechanism evidence',
                'verbose_name_plural': 'historical lgd molecular mechanism evidences',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDiseasePhenotype',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('score', models.DecimalField(decimal_places=6, max_digits=10)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('disease', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.disease')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('phenotype', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.ontologyterm')),
                ('publication', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.publication')),
            ],
            options={
                'verbose_name': 'historical disease phenotype',
                'verbose_name_plural': 'historical disease phenotypes',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddField(
            model_name='diseasephenotype',
            name='publication',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.publication'),
        ),
        migrations.CreateModel(
            name='PublicationComment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('comment', models.TextField()),
                ('is_public', models.SmallIntegerField(default=True)),
                ('is_deleted', models.SmallIntegerField(default=False)),
                ('date', models.DateTimeField()),
                ('publication', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.publication')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'publication_comment',
            },
        ),
        migrations.CreateModel(
            name='PublicationFamilies',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('families', models.IntegerField()),
                ('affected_individuals', models.IntegerField(null=True)),
                ('ancestries', models.CharField(max_length=500, null=True)),
                ('is_deleted', models.SmallIntegerField(default=False)),
                ('consanguinity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='consanguinity_publication', to='gene2phenotype_app.attrib')),
                ('publication', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.publication')),
            ],
            options={
                'db_table': 'publication_families',
            },
        ),
        migrations.CreateModel(
            name='Sequence',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('reference', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.attrib')),
            ],
            options={
                'db_table': 'sequence',
            },
        ),
        migrations.AddField(
            model_name='locus',
            name='sequence',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.sequence'),
        ),
        migrations.CreateModel(
            name='HistoricalLocus',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('start', models.IntegerField()),
                ('end', models.IntegerField()),
                ('strand', models.SmallIntegerField(default=1)),
                ('name', models.CharField(max_length=255)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.attrib')),
                ('sequence', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.sequence')),
            ],
            options={
                'verbose_name': 'historical locus',
                'verbose_name_plural': 'historical locuss',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Meta',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('key', models.CharField(max_length=100)),
                ('date_update', models.DateTimeField()),
                ('is_public', models.SmallIntegerField(default=False)),
                ('description', models.TextField(null=True)),
                ('version', models.CharField(max_length=20)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.source')),
            ],
            options={
                'db_table': 'meta',
            },
        ),
        migrations.CreateModel(
            name='LocusIdentifier',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=100)),
                ('description', models.CharField(default=None, max_length=255, null=True)),
                ('locus', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.locus')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.source')),
            ],
            options={
                'db_table': 'locus_identifier',
            },
        ),
        migrations.CreateModel(
            name='LocusAttrib',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('value', models.CharField(max_length=255)),
                ('is_deleted', models.SmallIntegerField(default=False)),
                ('attrib_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.attribtype')),
                ('locus', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.locus')),
                ('source', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.source')),
            ],
            options={
                'db_table': 'locus_attrib',
            },
        ),
        migrations.CreateModel(
            name='HistoricalOntologyTerm',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('accession', models.CharField(db_index=True, max_length=255)),
                ('term', models.CharField(max_length=255)),
                ('description', models.TextField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('group_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.attrib')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('source', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.source')),
            ],
            options={
                'verbose_name': 'historical ontology term',
                'verbose_name_plural': 'historical ontology terms',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLocusIdentifier',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('identifier', models.CharField(max_length=100)),
                ('description', models.CharField(default=None, max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('locus', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.locus')),
                ('source', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.source')),
            ],
            options={
                'verbose_name': 'historical locus identifier',
                'verbose_name_plural': 'historical locus identifiers',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLocusAttrib',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('value', models.CharField(max_length=255)),
                ('is_deleted', models.SmallIntegerField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('attrib_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.attribtype')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('locus', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.locus')),
                ('source', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gene2phenotype_app.source')),
            ],
            options={
                'verbose_name': 'historical locus attrib',
                'verbose_name_plural': 'historical locus attribs',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='GeneStats',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('gene_symbol', models.CharField(max_length=100)),
                ('score', models.FloatField(default='0.0')),
                ('description_attrib', models.ForeignKey(default='', on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.attrib')),
                ('gene', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.locus')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.source')),
            ],
            options={
                'db_table': 'gene_stats',
            },
        ),
        migrations.CreateModel(
            name='GeneDisease',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('disease', models.CharField(max_length=255)),
                ('identifier', models.CharField(max_length=50)),
                ('gene', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.locus')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.source')),
            ],
            options={
                'db_table': 'gene_disease',
            },
        ),
        migrations.CreateModel(
            name='UniprotAnnotation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uniprot_accession', models.CharField(max_length=100)),
                ('hgnc', models.CharField(max_length=50)),
                ('gene_symbol', models.CharField(max_length=100)),
                ('mim', models.CharField(max_length=100, null=True)),
                ('protein_function', models.TextField()),
                ('gene', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.locus')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.source')),
            ],
            options={
                'db_table': 'uniprot_annotation',
            },
        ),
        migrations.CreateModel(
            name='UserPanel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('is_deleted', models.SmallIntegerField(default=False)),
                ('panel', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gene2phenotype_app.panel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_panel',
            },
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['username'], name='user_usernam_b79065_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email'], name='user_email_7bbb4c_idx'),
        ),
        migrations.AddIndex(
            model_name='attrib',
            index=models.Index(fields=['value'], name='attrib_value_36cdd1_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='attrib',
            unique_together={('type', 'value')},
        ),
        migrations.AddIndex(
            model_name='diseasesynonym',
            index=models.Index(fields=['synonym'], name='disease_syn_synonym_193fdd_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='diseasesynonym',
            unique_together={('disease', 'synonym')},
        ),
        migrations.AddIndex(
            model_name='curationdata',
            index=models.Index(fields=['user'], name='curation_da_user_id_8ddef4_idx'),
        ),
        migrations.AddIndex(
            model_name='curationdata',
            index=models.Index(fields=['stable_id'], name='curation_da_stable__d8b0b4_idx'),
        ),
        migrations.AddIndex(
            model_name='curationdata',
            index=models.Index(fields=['session_name'], name='curation_da_session_d4a28e_idx'),
        ),
        migrations.AddIndex(
            model_name='curationdata',
            index=models.Index(fields=['gene_symbol'], name='curation_da_gene_sy_60db42_idx'),
        ),
        migrations.AddIndex(
            model_name='locusgenotypedisease',
            index=models.Index(fields=['locus'], name='locus_genot_locus_i_e09b56_idx'),
        ),
        migrations.AddIndex(
            model_name='locusgenotypedisease',
            index=models.Index(fields=['disease'], name='locus_genot_disease_53b9ce_idx'),
        ),
        migrations.AddIndex(
            model_name='locusgenotypedisease',
            index=models.Index(fields=['confidence'], name='locus_genot_confide_3532c9_idx'),
        ),
        migrations.AddIndex(
            model_name='locusgenotypedisease',
            index=models.Index(fields=['is_deleted'], name='locus_genot_is_dele_168b20_idx'),
        ),
        migrations.AddIndex(
            model_name='locusgenotypedisease',
            index=models.Index(fields=['is_reviewed'], name='locus_genot_is_revi_ab8ec8_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='locusgenotypedisease',
            unique_together={('locus', 'genotype', 'disease', 'mechanism')},
        ),
        migrations.AddIndex(
            model_name='lgdmolecularmechanismsynopsis',
            index=models.Index(fields=['lgd'], name='lgd_mechani_lgd_id_c5db00_idx'),
        ),
        migrations.AddIndex(
            model_name='lgdcrosscuttingmodifier',
            index=models.Index(fields=['lgd', 'ccm'], name='lgd_cross_c_lgd_id_b3a464_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='lgdcrosscuttingmodifier',
            unique_together={('lgd', 'ccm')},
        ),
        migrations.AddIndex(
            model_name='lgdvariantgenccconsequence',
            index=models.Index(fields=['variant_consequence'], name='lgd_variant_variant_db692d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='lgdvariantgenccconsequence',
            unique_together={('lgd', 'variant_consequence', 'support')},
        ),
        migrations.AddIndex(
            model_name='diseaseontologyterm',
            index=models.Index(fields=['ontology_term'], name='disease_ont_ontolog_8f98db_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='diseaseontologyterm',
            unique_together={('disease', 'ontology_term')},
        ),
        migrations.AddIndex(
            model_name='lgdpanel',
            index=models.Index(fields=['panel'], name='lgd_panel_panel_i_06e355_idx'),
        ),
        migrations.AddIndex(
            model_name='lgdpanel',
            index=models.Index(fields=['lgd', 'panel'], name='lgd_panel_lgd_id_0a1598_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='lgdpanel',
            unique_together={('lgd', 'panel')},
        ),
        migrations.AddIndex(
            model_name='phenotypepublication',
            index=models.Index(fields=['phenotype'], name='phenotype_p_phenoty_cb59e7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='phenotypepublication',
            unique_together={('phenotype', 'publication')},
        ),
        migrations.AddIndex(
            model_name='lgdvarianttype',
            index=models.Index(fields=['lgd', 'variant_type_ot'], name='lgd_variant_lgd_id_d44447_idx'),
        ),
        migrations.AddIndex(
            model_name='lgdvarianttype',
            index=models.Index(fields=['variant_type_ot'], name='lgd_variant_variant_71925f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='lgdvarianttype',
            unique_together={('lgd', 'variant_type_ot', 'publication')},
        ),
        migrations.AlterUniqueTogether(
            name='lgdpublication',
            unique_together={('lgd', 'publication')},
        ),
        migrations.AddIndex(
            model_name='lgdphenotype',
            index=models.Index(fields=['lgd', 'phenotype'], name='lgd_phenoty_lgd_id_1737d3_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='lgdphenotype',
            unique_together={('lgd', 'phenotype', 'publication')},
        ),
        migrations.AlterUniqueTogether(
            name='lgdmolecularmechanismevidence',
            unique_together={('lgd', 'evidence', 'publication')},
        ),
        migrations.AlterUniqueTogether(
            name='diseasephenotype',
            unique_together={('disease', 'phenotype', 'publication')},
        ),
        migrations.AddIndex(
            model_name='publicationfamilies',
            index=models.Index(fields=['publication'], name='publication_publica_e9eff3_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='publicationfamilies',
            unique_together={('publication', 'families', 'consanguinity', 'affected_individuals')},
        ),
        migrations.AddIndex(
            model_name='locus',
            index=models.Index(fields=['name'], name='locus_name_134ccc_idx'),
        ),
        migrations.AddIndex(
            model_name='locus',
            index=models.Index(fields=['type'], name='locus_type_id_38cd0f_idx'),
        ),
        migrations.AddIndex(
            model_name='ontologyterm',
            index=models.Index(fields=['accession'], name='ontology_te_accessi_53bf06_idx'),
        ),
        migrations.AddIndex(
            model_name='ontologyterm',
            index=models.Index(fields=['term'], name='ontology_te_term_a33f74_idx'),
        ),
        migrations.AddIndex(
            model_name='ontologyterm',
            index=models.Index(fields=['group_type'], name='ontology_te_group_t_fd950f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='ontologyterm',
            unique_together={('accession', 'term')},
        ),
        migrations.AddIndex(
            model_name='locusidentifier',
            index=models.Index(fields=['identifier'], name='locus_ident_identif_299d61_idx'),
        ),
        migrations.AddIndex(
            model_name='locusattrib',
            index=models.Index(fields=['value'], name='locus_attri_value_2a00e3_idx'),
        ),
        migrations.AddIndex(
            model_name='locusattrib',
            index=models.Index(fields=['attrib_type'], name='locus_attri_attrib__3df1bb_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='locusattrib',
            unique_together={('locus', 'value', 'attrib_type')},
        ),
        migrations.AddIndex(
            model_name='genestats',
            index=models.Index(fields=['gene'], name='gene_stats_gene_id_85d18a_idx'),
        ),
        migrations.AddIndex(
            model_name='genedisease',
            index=models.Index(fields=['gene'], name='gene_diseas_gene_id_f5d0ed_idx'),
        ),
        migrations.AddIndex(
            model_name='genedisease',
            index=models.Index(fields=['disease'], name='gene_diseas_disease_e6cb3b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='genedisease',
            unique_together={('gene', 'disease', 'source')},
        ),
        migrations.AddIndex(
            model_name='uniprotannotation',
            index=models.Index(fields=['uniprot_accession'], name='uniprot_ann_uniprot_c49c17_idx'),
        ),
        migrations.AddIndex(
            model_name='uniprotannotation',
            index=models.Index(fields=['hgnc'], name='uniprot_ann_hgnc_190d1c_idx'),
        ),
        migrations.AddIndex(
            model_name='userpanel',
            index=models.Index(fields=['user', 'panel'], name='user_panel_user_id_7a87f5_idx'),
        ),
    ]
